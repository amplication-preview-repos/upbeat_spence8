/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ItinRaire as PrismaItinRaire,
  Recherche as PrismaRecherche,
} from "@prisma/client";

export class ItinRaireServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ItinRaireCountArgs, "select">
  ): Promise<number> {
    return this.prisma.itinRaire.count(args);
  }

  async itinRaires(
    args: Prisma.ItinRaireFindManyArgs
  ): Promise<PrismaItinRaire[]> {
    return this.prisma.itinRaire.findMany(args);
  }
  async itinRaire(
    args: Prisma.ItinRaireFindUniqueArgs
  ): Promise<PrismaItinRaire | null> {
    return this.prisma.itinRaire.findUnique(args);
  }
  async createItinRaire(
    args: Prisma.ItinRaireCreateArgs
  ): Promise<PrismaItinRaire> {
    return this.prisma.itinRaire.create(args);
  }
  async updateItinRaire(
    args: Prisma.ItinRaireUpdateArgs
  ): Promise<PrismaItinRaire> {
    return this.prisma.itinRaire.update(args);
  }
  async deleteItinRaire(
    args: Prisma.ItinRaireDeleteArgs
  ): Promise<PrismaItinRaire> {
    return this.prisma.itinRaire.delete(args);
  }

  async getRecherche(parentId: string): Promise<PrismaRecherche | null> {
    return this.prisma.itinRaire
      .findUnique({
        where: { id: parentId },
      })
      .recherche();
  }
}
