/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Adresse as PrismaAdresse } from "@prisma/client";

export class AdresseServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AdresseCountArgs, "select">): Promise<number> {
    return this.prisma.adresse.count(args);
  }

  async adresses(args: Prisma.AdresseFindManyArgs): Promise<PrismaAdresse[]> {
    return this.prisma.adresse.findMany(args);
  }
  async adresse(
    args: Prisma.AdresseFindUniqueArgs
  ): Promise<PrismaAdresse | null> {
    return this.prisma.adresse.findUnique(args);
  }
  async createAdresse(args: Prisma.AdresseCreateArgs): Promise<PrismaAdresse> {
    return this.prisma.adresse.create(args);
  }
  async updateAdresse(args: Prisma.AdresseUpdateArgs): Promise<PrismaAdresse> {
    return this.prisma.adresse.update(args);
  }
  async deleteAdresse(args: Prisma.AdresseDeleteArgs): Promise<PrismaAdresse> {
    return this.prisma.adresse.delete(args);
  }
}
